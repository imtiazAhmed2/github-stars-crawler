name: Crawl GitHub Stars

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # allows manual run

jobs:
  crawl-stars:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_data
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 🧱 Step 1: Checkout your repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 🧰 Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 📦 Step 3: Install dependencies
      # ✅ If you have package-lock.json, you can switch back to npm ci
      - name: Install dependencies
        run: npm install

      # 🗃️ Step 4: Wait for Postgres to be ready
      - name: Wait for PostgreSQL
        run: |
          echo "⏳ Waiting for PostgreSQL to start..."
          until pg_isready -h localhost -U postgres; do
            sleep 2
          done
          echo "✅ PostgreSQL is ready."

      # 🏗️ Step 5: Create schema and tables
      - name: Setup database schema
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d github_data -f schema.sql

      # 🚀 Step 6: Run crawler
      - name: Run crawler to fetch 100,000 repos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: github_data
        run: node crawl_stars.js

      # 📤 Step 7: Export data to CSV for artifact upload
      - name: Dump database to CSV
        run: |
          mkdir -p dumps
          PGPASSWORD=postgres psql -h localhost -U postgres -d github_data -c "\copy repositories TO 'dumps/repositories.csv' CSV HEADER"
          PGPASSWORD=postgres psql -h localhost -U postgres -d github_data -c "\copy repo_stars_daily TO 'dumps/repo_stars_daily.csv' CSV HEADER"

      # 📦 Step 8: Upload as artifact
      - name: Upload crawl results
        uses: actions/upload-artifact@v4
        with:
          name: github-repo-stars
          path: dumps/
